import numpy as np
from qiskit import QuantumCircuit, QuantumRegister 
from qiskit import ClassicalRegister, execute, Aer, IBMQ
from qiskit.visualization import plot_histogram
%config InlineBackend.figure_format = 'svg'

def create_bell_pair(qc, a, b):
    qc.h(a) 
    qc.cx(a,b)
    
def alice_gates(qc, psi, a):
    qc.cx(psi, a)
    qc.h(psi)    

def bob_gates(qc, a, b, c):
    qc.cz(a, c)
    qc.cx(b, c)
  
qc = QuantumCircuit(6,2)
qc.h(0)
qc.barrier()
create_bell_pair(qc, 1, 2)
qc.barrier()
alice_gates(qc, 0, 1)
qc.barrier()
bob_gates(qc, 0, 1, 2)

qc.h(5)
qc.barrier()
create_bell_pair(qc, 4, 3)
qc.barrier()
alice_gates(qc, 5, 4)
qc.barrier()
bob_gates(qc, 5, 4, 3)

qc.measure(2,0)
qc.measure(3,1)

backend = Aer.get_backend('qasm_simulator')
counts = execute(qc, backend, shots=1024).result().get_counts()
plot_histogram(counts)
